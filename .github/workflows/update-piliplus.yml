name: Update PiliPlus Repo JSON

on:
  schedule:
    - cron: '0 */23 * * *'  # 每12小时运行一次
  workflow_dispatch:  # 允许手动触发

jobs:
  check-and-update:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install requests PyGithub

      - name: Check releases and update piliplus.json
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          cat > update_piliplus.py << 'EOF'
          import json
          import os
          from datetime import datetime
          from github import Auth
          from github import Github
          import requests

          def get_file_size(url):
              response = requests.head(url)
              return int(response.headers.get('content-length', 0))

          def create_initial_json():
              return {
                  "identifier": "com.bggRGjQaUbCoE.PiliPlus",
                  "sourceURL": "https://raw.githubusercontent.com/bggRGjQaUbCoE/PiliPlus/main/piliplus.json",
                  "apps": [
                      {
                          "name": "PiliPlus",
                          "bundleIdentifier": "com.bggRGjQaUbCoE.PiliPlus",
                          "developerName": "bggRGjQaUbCoE",
                          "subtitle": "第三方哔哩哔哩客户端",
                          "localizedDescription": "PiliPlus 是一款第三方哔哩哔哩客户端，专为 iOS 设备打造。",
                          "iconURL": "https://raw.githubusercontent.com/bggRGjQaUbCoE/PiliPlus/main/assets/images/logo/logo.png",
                          "tintColor": "#FB7299",
                          "screenshotURLs": [
                              "https://raw.githubusercontent.com/bggRGjQaUbCoE/PiliPlus/main/assets/screenshots/home.png",
                              "https://raw.githubusercontent.com/bggRGjQaUbCoE/PiliPlus/main/assets/screenshots/main_screen.png"
                          ],
                          "version": "",
                          "versionDate": "",
                          "downloadURL": "",
                          "size": 0,
                          "versionDescription": ""
                      }
                  ]
              }

          def main():
              # 初始化GitHub客户端，使用新的认证方式
              auth = Auth.Token(os.environ['GITHUB_TOKEN'])
              g = Github(auth=auth)
              repo = g.get_repo("bggRGjQaUbCoE/PiliPlus")
              
              # 获取最新release
              latest_release = repo.get_latest_release()
              
              # 查找IPA文件
              ipa_asset = None
              for asset in latest_release.get_assets():
                  if asset.name.endswith('.ipa'):
                      ipa_asset = asset
                      break
              
              if not ipa_asset:
                  print("No IPA file found in latest release")
                  return
              
              # 确保有初始 JSON 结构
              if not os.path.exists('piliplus.json'):
                  source_data = create_initial_json()
              else:
                  try:
                      with open('piliplus.json', 'r', encoding='utf-8') as f:
                          source_data = json.load(f)
                  except json.JSONDecodeError:
                      source_data = create_initial_json()
              
              # 更新版本信息
              source_data['apps'][0].update({
                  'version': latest_release.tag_name.lstrip('v'),
                  'versionDate': latest_release.published_at.strftime("%Y-%m-%dT%H:%M:%SZ"),
                  'downloadURL': ipa_asset.browser_download_url,
                  'size': ipa_asset.size,
                  'versionDescription': latest_release.body
              })
              
              # 保存更新后的文件
              with open('piliplus.json', 'w', encoding='utf-8') as f:
                  json.dump(source_data, f, ensure_ascii=False, indent=2)
              
              print("Successfully updated piliplus.json")

          if __name__ == '__main__':
              main()
          EOF
          
          python update_piliplus.py

      - name: Commit changes
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add piliplus.json
          git diff --quiet && git diff --staged --quiet || git commit -m "chore: update piliplus.json with latest release info [skip ci]"

      - name: Push changes
        run: git push
